// class Area{
//   final double length;
//   final double width;
//   final double area;
//
//   const Area._internal(this.length, this.width) : area = length * width;
//
//   factory Area (double length, double width){
//     if(length < 0 || width < 0){
//       throw Exception("Area Can't be Negative");
//     }
//     else{
//       return Area._internal(length , width);
//     }
//   }
//
//   void show(){
//     print("Area is $area");
//   }
// }
//
// void main(){
//   Area area = Area(150, 250);
//   area.show();
// }

// class Person{
//   String name;
//   int id;
//
//   Person(this.name, this.id);
//
//   factory Person.FromMap(Map<String , Object>map){
//     final name = map["name"] as String;
//     final id = map["id"] as int;
//
//     return Person(name , id);
//   }
//
//   void show(){
//     print("Name is $name and Id is $id");
//   }
// }
//
// void main(){
//   Person person = Person.FromMap({"name": "Saikat", "id": 660683 });
//   person.show();
// }

// enum ShapeType {circle , rectangle}
//
// class Circle implements Shape{
//   void draw(){
//     print("This is a Circle");
//   }
// }
//
// class Rectangle implements Shape{
//   void draw(){
//     print("This is a Rectangle");
//   }
// }
//
// abstract class Shape {
//   factory Shape (ShapeType type){
//     switch(type){
//       case ShapeType.circle:
//         return Circle();
//       case ShapeType.rectangle:
//         return Rectangle();
//       default :   throw "Invalid";
//     }
//   }
//
//   void draw();
// }
//
// void main(){
//   Shape shape = Shape(ShapeType.circle);
//   Shape shape2 =Shape(ShapeType.rectangle);
//
//   shape.draw();
//   shape2.draw();
// }
//


//üëâ ‡¶è‡¶ï‡¶ü‡¶æ Shape ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ abstract class ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì‡•§ ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶æ method ‚Äî area() (abstract)‡•§
//‡¶Ü‡¶∞ factory constructor ‡¶•‡¶æ‡¶ï‡¶¨‡ßá Shape-‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá, ‡¶Ø‡ßá‡¶ü‡¶æ Circle ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ object return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//Circle ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá ‡¶è‡¶ï‡¶ü‡¶æ property ‡¶•‡¶æ‡¶ï‡¶¨‡ßá radius, ‡¶Ü‡¶∞ area() method ‡¶ü‡¶æ return ‡¶ï‡¶∞‡¶¨‡ßá ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡ßá‡¶∞ ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡¶´‡¶≤ (3.14 * radius * radius)‡•§
//main() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá Shape ‡¶è‡¶∞ object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá area() ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßã‡•§

// abstract class Shape {
//   double area();
//
//   factory Shape (double radius){
//     return Circle(radius);
//   }
// }
//
// class Circle implements Shape{
//   double? radius;
//
//   Circle(this.radius);
//
//   @override
//   double area() {
//     // TODO: implement area
//     return (3.14 * radius! * radius!);
//   }
// }
//
// void main(){
//   Shape shape = Shape(15.7);
//
//   print("Area : ${ shape.area()}");
//
// }


//‡¶è‡¶ï‡¶ü‡¶æ NumberCheck ‡¶®‡¶æ‡¶Æ‡ßá class ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì‡•§ ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶æ factory constructor ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‚Äî ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶æ integer ‡¶®‡ßá‡¶¨‡ßá‡•§
//‡¶Ø‡¶¶‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ positive ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá PositiveNumber class-‡¶è‡¶∞ object return ‡¶ï‡¶∞‡¶¨‡ßá, ‡¶Ü‡¶∞ ‡¶Ø‡¶¶‡¶ø negative ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá NegativeNumber class-‡¶è‡¶∞ object return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶á ‡¶è‡¶ï‡¶ü‡¶æ method ‡¶•‡¶æ‡¶ï‡¶¨‡ßá show() ‚Äî ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá:
//Positive ‡¶π‡¶≤‡ßá ‚Äî ‚ÄúThis is a positive number‚Äù
//Negative ‡¶π‡¶≤‡ßá ‚Äî ‚ÄúThis is a negative number‚Äù
//main() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá NumberCheck ‡¶è‡¶∞ object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá show() ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßã‡•§


// abstract class NumberCheck {
//   factory NumberCheck(int a){
//     if(a >= 0){
//       return PositiveNumber();
//     }
//     else{
//       return NegativeNumber();
//     }
//   }
//
//   void show();
// }
//
// class PositiveNumber implements NumberCheck{
//   void show(){
//     print("This is a positive number");
//   }
// }
//
// class NegativeNumber implements NumberCheck{
//   void show(){
//     print("This is a Negative Number");
//   }
// }
//
//
// void main(){
//   NumberCheck numberCheck = NumberCheck(-1);
//
//   numberCheck.show();
// }

//‡¶è‡¶ï‡¶ü‡¶æ Animal ‡¶®‡¶æ‡¶Æ‡ßá abstract class ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì‡•§ ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶æ abstract method sound() ‡¶è‡¶¨‡¶Ç ‡¶è‡¶ï‡¶ü‡¶æ factory constructor ‡¶•‡¶æ‡¶ï‡¶¨‡ßá, ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶ø string ‡¶®‡ßá‡¶¨‡ßá ‚Äî
//‡¶Ø‡ßá‡¶Æ‡¶® "dog" ‡¶¨‡¶æ "cat"‡•§ ‡¶Ø‡¶¶‡¶ø "dog" ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá Dog ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ object return ‡¶ï‡¶∞‡¶¨‡ßá, ‡¶Ü‡¶∞ ‡¶Ø‡¶¶‡¶ø "cat" ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá Cat ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ object return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//Dog ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá sound() ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá "Woof! Woof!"
//Cat ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá sound() ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá "Meow! Meow!"
//main() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ animal object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá sound() ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßã‡•§

// abstract class Animal {
//   void sound();
//
//   factory Animal(String animalName){
//     if(animalName == "dog"){
//       return Dog();
//     }
//     else{
//       return Cat();
//     }
//   }
// }
//
// class Dog implements Animal{
//   void sound(){
//     print("Woof! Woof!");
//   }
// }
//
// class Cat implements Animal{
//   void sound(){
//     print("Meow! Meow!");
//   }
// }
//
// void main(){
//   Animal animal = Animal("dog");
//   animal.sound();
//   Animal animal2 = Animal("cat");
//   animal2.sound();
// }


//‡¶è‡¶ï‡¶ü‡¶æ Vehicle ‡¶®‡¶æ‡¶Æ‡ßá abstract class ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì‡•§
//‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶æ abstract method start().
//‡¶Ü‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ factory constructor ‡¶•‡¶æ‡¶ï‡¶¨‡ßá,
//‡¶Ø‡ßá‡¶ü‡¶æ ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶æ string ‡¶®‡ßá‡¶¨‡ßá ‚Äî "car" ‡¶¨‡¶æ "bike"‡•§
//‡¶Ø‡¶¶‡¶ø "car" ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá Car ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ object return ‡¶ï‡¶∞‡¶¨‡ßá,
//‡¶Ü‡¶∞ ‡¶Ø‡¶¶‡¶ø "bike" ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá Bike ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ object return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//Car ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá start() method ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá ‚Äî "Car is starting..."
//Bike ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá start() method ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá ‚Äî "Bike is starting..."
//main() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ vehicle object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá start() ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßã‡•§


// abstract class Vehicle{
//   void start();
//
//   factory Vehicle(String type){
//     if(type == "car"){
//       return Car();
//     }
//     else{
//       return Bike();
//     }
//   }
// }
//
// class Car implements Vehicle{
//   void start(){
//     print("Car is Starting");
//   }
// }
//
// class Bike implements Vehicle{
//   @override
//   void start() {
//     // TODO: implement start
//     print("Bike is Starting");
//   }
// }
//
// void main(){
//   Vehicle vehicle = Vehicle("car");
//   vehicle.start();
//
//   Vehicle vehicle2= Vehicle("Bike");
//   vehicle2.start();
// }


//‡¶è‡¶ï‡¶ü‡¶æ Login ‡¶®‡¶æ‡¶Æ‡ßá class ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì‡•§ ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶æ factory constructor, ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ username ‡¶Ü‡¶∞ password ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶®‡ßá‡¶¨‡ßá‡•§
//‡¶Ø‡¶¶‡¶ø username "admin" ‡¶Ü‡¶∞ password "1234" ‡¶π‡ßü ‚Äî ‡¶§‡¶æ‡¶π‡¶≤‡ßá AdminLogin ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ object return ‡¶ï‡¶∞‡¶¨‡ßá,
//‡¶Ö‡¶®‡ßç‡¶Ø‡¶•‡¶æ‡ßü GuestLogin ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ object return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//AdminLogin ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá ‡¶è‡¶ï‡¶ü‡¶ø method welcome() ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá ‚Äî
//"Welcome, Admin!"
//GuestLogin ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá method welcome() ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá ‚Äî
//"Welcome, Guest!"
//main() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá welcome() ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßã‡•§

// class Login{
//   factory Login (String username, String password){
//     if(username == "admin" && password == "1234"){
//       return AdminLogin();
//     }
//     else{
//       return GuestLogin();
//     }
//   }
// }
//
// class AdminLogin implements Login{
//   void welcome(){
//     print("Welcome, Admin!");
//   }
// }
//
// class GuestLogin implements Login{
//   void welcome(){
//     print("Welcome, Guest!");
//   }
// }
//
// void main(){
//   Login user = Login("admin", "1234");
//   (user as AdminLogin).welcome();
//
//   Login user2 = Login("Guest", "2457");
//   (user2 as GuestLogin).welcome();
// }


//‡¶è‡¶ï‡¶ü‡¶æ Shape ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ abstract class ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì‡•§ ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶æ abstract method area()‡•§
//Factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá Shape ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶¨‡ßá ‡¶è‡¶Æ‡¶®‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ø‡ßá ‚Äî ‡¶Ø‡¶¶‡¶ø "rectangle" ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá Rectangle ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ object return ‡¶ï‡¶∞‡¶¨‡ßá,
//‡¶Ü‡¶∞ ‡¶Ø‡¶¶‡¶ø "square" ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá Square ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ object return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//Rectangle ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá property ‡¶•‡¶æ‡¶ï‡¶¨‡ßá length ‡¶è‡¶¨‡¶Ç width, ‡¶Ü‡¶∞ Square ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá side‡•§ ‡¶¶‡ßÅ‡¶á ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶á area() method implement ‡¶ï‡¶∞‡ßá ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡¶´‡¶≤ return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//main() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã ‡¶è‡¶¨‡¶Ç ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ area ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßã‡•§

// abstract class Shape {
//   void area();
//
//   factory Shape(String type, double a, [double? b]){
//     if(type == "rectangle"){
//       return Rectangle(a , b ?? 0);
//     }
//     else if(type == "square"){
//       return Square(a);
//     }
//     else{
//       throw Exception("Invalid Shape");
//     }
//   }
// }
//
// class Rectangle implements Shape{
//   double? length;
//   double? width;
//
//   Rectangle(this.length, this.width);
//
//   void area(){
//     print("Rectangle Area : ${length!*width!}");
//   }
// }
//
// class Square implements Shape{
//   double? side;
//
//   Square(this.side);
//
//   @override
//   void area() {
//     print("Square Area : ${side!*side!}");
//   }
// }
//
// void main(){
//   Shape shape = Shape("rectangle", 5, 7);
//   Shape shape2 = Shape("square", 4);
//
//   shape.area();
//   shape2.area();
// }


//‡¶è‡¶ï‡¶ü‡¶æ abstract class Payment ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì‡•§ ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶ø abstract method pay(double amount)‡•§
//Factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá Payment ‡¶è‡¶∞ object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶¨‡ßá ‡¶è‡¶Æ‡¶®‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ø‡ßá ‚Äî
//‡¶Ø‡¶¶‡¶ø "Bkash" ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá BkashPayment class return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//‡¶Ø‡¶¶‡¶ø "Nagad" ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá NagadPayment class return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//‡¶Ø‡¶¶‡¶ø "Rocket" ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá RocketPayment class return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá pay(double amount) method implement ‡¶ï‡¶∞‡¶¨‡ßá ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá ‚Äî
//"Paid [amount] via Bkash"
//"Paid [amount] via Nagad"
//"Paid [amount] via Rocket"
//main() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶§‡¶ø‡¶® ‡¶ß‡¶∞‡¶®‡ßá‡¶∞ payment object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã ‡¶è‡¶¨‡¶Ç ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ pay() method ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßã‡•§

// abstract class Payment{
//   void pay(double amount);
//
//   factory Payment(String type){
//     if(type == "Bkash"){
//       return BkashPayment();
//     }
//     else if (type == "Nagad"){
//       return NagadPayment();
//     }
//     else if (type == "Rocket"){
//       return RocketPayment();
//     }
//     else {
//       throw Exception("Invalid");
//     }
//   }
// }
//
// class BkashPayment implements Payment{
//   @override
//   void pay(double amount) {
//     // TODO: implement pay
//     print("Paid $amount via Bkash");
//   }
// }
//
// class NagadPayment implements Payment{
//   @override
//   void pay(double amount) {
//     // TODO: implement pay
//     print("Paid $amount via Nagad");
//   }
// }
//
// class RocketPayment implements Payment{
//   @override
//   void pay(double amount) {
//     // TODO: implement pay
//     print("Paid $amount via Rocket");
//   }
// }
//
// void main(){
//   Payment payment = Payment("Bkash");
//   payment.pay(2000);
//
//   Payment payment2 = Payment("Nagad");
//   payment2.pay(2000);
//
//   Payment payment3 = Payment("Rocket");
//   payment3.pay(2000);
// }


//‡¶è‡¶ï‡¶ü‡¶æ abstract class NumberType ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì‡•§ ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá abstract method describe().
//Factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶ø integer number ‡¶®‡¶æ‡¶ì‡•§
//‡¶Ø‡¶¶‡¶ø number even ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá EvenNumber class return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//‡¶Ø‡¶¶‡¶ø number odd ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá OddNumber class return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//EvenNumber class-‡¶è describe() ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá ‚Äî "This is an even number"
//OddNumber class-‡¶è describe() ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá ‚Äî "This is an odd number"
//main() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶¶‡ßÅ‡¶á‡¶ü‡¶ø object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã ‡¶è‡¶¨‡¶Ç ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ describe() ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßã‡•§

// abstract class NumberType{
//   void describe();
//
//   factory NumberType (int number){
//     if(number%2==0){
//       return EvenNumber();
//     }
//     else{
//       return OddNumber();
//     }
//   }
// }
//
// class EvenNumber implements NumberType{
//   @override
//   void describe() {
//     // TODO: implement describe
//     print("This is an Even Number");
//   }
// }
//
// class OddNumber implements NumberType {
//   @override
//   void describe() {
//     // TODO: implement describe
//     print("This is an Odd Number");
//   }
// }
//
// void main(){
//   NumberType numberType = NumberType(6);
//   numberType.describe();
// }


//‡¶è‡¶ï‡¶ü‡¶æ abstract class Grade ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì‡•§ ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá abstract method showGrade().
//Factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø integer mark ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶®‡¶æ‡¶ì:
//‡¶Ø‡¶¶‡¶ø mark >= 80, ‡¶§‡¶æ‡¶π‡¶≤‡ßá A_Grade class return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//‡¶Ø‡¶¶‡¶ø mark >= 60 ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ < 80, ‡¶§‡¶æ‡¶π‡¶≤‡ßá B_Grade class return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//‡¶Ø‡¶¶‡¶ø mark >= 40 ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ < 60, ‡¶§‡¶æ‡¶π‡¶≤‡ßá C_Grade class return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//‡¶Ø‡¶¶‡¶ø mark < 40, ‡¶§‡¶æ‡¶π‡¶≤‡ßá F_Grade class return ‡¶ï‡¶∞‡¶¨‡ßá‡•§
//‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø class-‡¶è showGrade() method implement ‡¶ï‡¶∞‡¶¨‡ßá ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá:
//"You got A grade"
//"You got B grade"
//"You got C grade"
//"You got F grade"
//main() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá factory constructor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® mark ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø object ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá showGrade() ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßã‡•§

// abstract class Grade{
//   void showGrade();
//
//   factory Grade(int mark){
//     if(mark >= 80){
//       return A_Grade();
//     }
//     else if(mark >= 60){
//       return B_Grade();
//     }
//     else if(mark >= 40){
//       return C_Grade();
//     }
//     else{
//       return F_Grade();
//     }
//   }
// }
//
// class A_Grade implements Grade {
//   @override
//   void showGrade() {
//     // TODO: implement showGrade
//     print("You got A grade");
//   }
// }
//
// class B_Grade implements Grade {
//   @override
//   void showGrade() {
//     // TODO: implement showGrade
//     print("You got B grade");
//   }
// }
//
// class C_Grade implements Grade {
//   @override
//   void showGrade() {
//     // TODO: implement showGrade
//     print("You got C grade");
//   }
// }
//
// class F_Grade implements Grade {
//   @override
//   void showGrade() {
//     // TODO: implement showGrade
//     print("You got F grade");
//   }
// }
//
// void main(){
//   Grade grade = Grade(85);
//   grade.showGrade();
//
//   Grade grade2 = Grade(65);
//   grade2.showGrade();
//
//   Grade grade3 = Grade(45);
//   grade3.showGrade();
//
//   Grade grade4 = Grade(35);
//   grade4.showGrade();
// }
























